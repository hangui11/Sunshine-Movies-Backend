import pandas as pd 

class Trivial:
    '''
    This method initializes the Trivial class with the necessary data and parameters,
    preparing it for the item-to-item collaborative filtering algorithm.
     - self.ratings_train: Stores the training ratings dataset
     - self.topK: Stores the number of top recommendations to be generated
     - self.movies: Stores a dataframe with the movies information
     - self.recommendations: Stores the recommendations generated by the "trivial" algorithm
    '''
    def __init__(self, ratings_train,  k=10) -> None:
        self.ratings_train = ratings_train
        self.topK = k
        self.recommendations = self.trivial_recommender()

    '''
    This function computes the top k movies with the highest average rating using pandas and returns their movieId
    '''
    def trivial_recommender(self) -> list: 
        
        ratingsMean = self.ratings_train[['movieId', 'rating']].groupby(by=['movieId']).mean().reset_index()
        sortValues = ratingsMean.sort_values(by=['rating'], ascending=False)
        relevantsK = sortValues.head(self.topK)
        print(sortValues)
        self.topMovieTrivial = relevantsK['movieId'].values.tolist()
        return self.topMovieTrivial
